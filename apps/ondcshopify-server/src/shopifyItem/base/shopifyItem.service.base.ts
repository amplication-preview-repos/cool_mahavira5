/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ShopifyItem as PrismaShopifyItem } from "@prisma/client";

export class ShopifyItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ShopifyItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.shopifyItem.count(args);
  }

  async shopifyItems(
    args: Prisma.ShopifyItemFindManyArgs
  ): Promise<PrismaShopifyItem[]> {
    return this.prisma.shopifyItem.findMany(args);
  }
  async shopifyItem(
    args: Prisma.ShopifyItemFindUniqueArgs
  ): Promise<PrismaShopifyItem | null> {
    return this.prisma.shopifyItem.findUnique(args);
  }
  async createShopifyItem(
    args: Prisma.ShopifyItemCreateArgs
  ): Promise<PrismaShopifyItem> {
    return this.prisma.shopifyItem.create(args);
  }
  async updateShopifyItem(
    args: Prisma.ShopifyItemUpdateArgs
  ): Promise<PrismaShopifyItem> {
    return this.prisma.shopifyItem.update(args);
  }
  async deleteShopifyItem(
    args: Prisma.ShopifyItemDeleteArgs
  ): Promise<PrismaShopifyItem> {
    return this.prisma.shopifyItem.delete(args);
  }
}
