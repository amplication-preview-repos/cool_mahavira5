/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OndcItem as PrismaOndcItem } from "@prisma/client";

export class OndcItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OndcItemCountArgs, "select">): Promise<number> {
    return this.prisma.ondcItem.count(args);
  }

  async ondcItems(
    args: Prisma.OndcItemFindManyArgs
  ): Promise<PrismaOndcItem[]> {
    return this.prisma.ondcItem.findMany(args);
  }
  async ondcItem(
    args: Prisma.OndcItemFindUniqueArgs
  ): Promise<PrismaOndcItem | null> {
    return this.prisma.ondcItem.findUnique(args);
  }
  async createOndcItem(
    args: Prisma.OndcItemCreateArgs
  ): Promise<PrismaOndcItem> {
    return this.prisma.ondcItem.create(args);
  }
  async updateOndcItem(
    args: Prisma.OndcItemUpdateArgs
  ): Promise<PrismaOndcItem> {
    return this.prisma.ondcItem.update(args);
  }
  async deleteOndcItem(
    args: Prisma.OndcItemDeleteArgs
  ): Promise<PrismaOndcItem> {
    return this.prisma.ondcItem.delete(args);
  }
}
